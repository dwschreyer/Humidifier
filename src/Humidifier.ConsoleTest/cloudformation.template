{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Description",
  "Parameters": {
    "Environment": {
      "Type": "String",
      "Description": "Deployment environment",
      "AllowedValues": [
        "test",
        "uat",
        "prod"
      ],
      "ConstraintDescription": "Allowed values: [test, uat, prod]",
      "MinLength": 3,
      "MaxLength": 4
    },
    "AutomationStack": {
      "Type": "String",
      "Description": "Automation stack name",
      "AllowedPattern": "^[a-zA-Z][-a-zA-Z0-9]*$",
      "ConstraintDescription": "Must be a valid Cloudformation Stack name",
      "MinLength": 1,
      "MaxLength": 255
    },
    "CodeS3Key": {
      "Type": "String",
      "MinLength": 3
    },
    "SubnetIds": {
      "Type": "String",
      "MinLength": 3
    }
  },
  "Resources": {
    "Volume": {
      "Type": "AWS::EC2::Volume",
      "Condition": "CreateProdResources",
      "Properties": {
        "AvailabilityZone": {
          "Fn::GetAtt": [
            "Ec2Instance",
            "AvailabilityZone"
          ]
        },
        "Size": 100
      }
    },
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": false,
        "EnableDnsSupport": false,
        "InstanceTenancy": "dedicated",
        "Tags": [
          {
            "Key": "foo",
            "Value": "bar"
          }
        ]
      }
    },
    "Subnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            "0",
            {
              "Fn::GetAZs": {
                "Ref": "AWS::Region"
              }
            }
          ]
        },
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "Ec2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "ImageId": {
          "Fn::FindInMap": [
            "RegionMap",
            {
              "Ref": "AWS::Region"
            },
            "64"
          ]
        },
        "InstanceType": "m1.small",
        "UserData": {
          "Fn::Base64": "#!/bin/bash -e\r\nwget https://opscode-omnibus-packages.s3.amazonaws.com/ubuntu/12.04/x86_64/chef_11.6.2-1.ubuntu.12.04_amd64.deb\r\ndpkg -i chef_11.6.2-1.ubuntu.12.04_amd64.deb\r\n"
        }
      }
    },
    "AutomationServiceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "cloudformation.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "DeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": {
          "Ref": "AWS::StackName"
        }
      }
    },
    "DeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "DeploymentBucket"
        },
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::GetAtt": [
                    "AutomationServiceRole",
                    "Arn"
                  ]
                }
              },
              "Action": "s3:*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "DeploymentBucket"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:s3:::",
                      {
                        "Ref": "DeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "LambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::ImportValue": {
              "Fn::Sub": "${AutomationStack}-DeploymentBucket"
            }
          },
          "S3Key": {
            "Ref": "CodeS3Key"
          }
        },
        "Description": "",
        "Environment": {
          "Variables": {
            "EnvironmentName": {
              "Ref": "Environment"
            }
          }
        },
        "FunctionName": {
          "Ref": "AWS::StackName"
        },
        "Handler": "SomeProject::SomeProject.SomeFunction::FunctionHandler",
        "MemorySize": 256,
        "Runtime": "dotnetcore1.0",
        "Timeout": 30
      }
    },
    "MonitoringSnsTopic": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "DisplayName": {
          "Ref": "AWS::StackName"
        },
        "Subscription": [
          {
            "Endpoint": "team@example.com",
            "Protocol": "email"
          }
        ]
      }
    },
    "KmsKey": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "Description": "A Key",
        "KeyPolicy": {
          "Version": "2012-10-17",
          "Id": "key-default-1",
          "Statement": [
            {
              "Sid": "Allow the administration of the key",
              "Effect": "Allows",
              "Principal": {
                "AWS": "arn:aws:iam::123456789012:user/Alice"
              },
              "Action": [
                "kms:Create*",
                "kms:Describe*",
                "kms:Enable*",
                "kms:List*",
                "kms:Put*",
                "kms:Update*",
                "kms:Revoke*",
                "kms:Disable*",
                "kms:Get*",
                "kms:Delete*",
                "kms:ScheduleKeyDeletion",
                "kms:CancelKeyDeletion"
              ],
              "Resource": "*"
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "DeploymentBucket": {
      "Value": {
        "Ref": "DeploymentBucket"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-DeploymentBucket"
        }
      },
      "Description": {
        "Fn::Sub": [
          "BucketName: ${BucketName}, DomainName: ${DomainName}",
          {
            "BucketName": {
              "Ref": "DeploymentBucket"
            },
            "DomainName": {
              "Fn::GetAtt": [
                "DeploymentBucket",
                "DomainName"
              ]
            }
          }
        ]
      }
    },
    "AutomationServiceRole": {
      "Value": {
        "Fn::GetAtt": [
          "AutomationServiceRole",
          "Arn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-AutomationServiceRole"
        }
      }
    },
    "KmsKeyArn": {
      "Value": {
        "Fn::GetAtt": [
          "KmsKey",
          "Arn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-KmsKeyArn"
        }
      }
    },
    "MonitoringSnsTopicArn": {
      "Value": {
        "Ref": "MonitoringSnsTopic"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-MonitoringSnsTopicArn"
        }
      }
    }
  },
  "Mappings": {
    "RegionMap": {
      "us-east-1": {
        "32": "ami-6411e20d",
        "64": "ami-7a11e213"
      },
      "us-west-1": {
        "32": "ami-c9c7978c",
        "64": "ami-cfc7978a"
      },
      "ue-west-1": {
        "32": "ami-37c2f643",
        "64": "ami-31c2f645"
      },
      "ap-southeast-1": {
        "32": "ami-66f28c34",
        "64": "ami-60f28c32"
      },
      "ap-northeast-1": {
        "32": "ami-9c03a89d",
        "64": "ami-a003a8a1"
      }
    }
  },
  "Conditions": {
    "CreateProdResources": {
      "Fn::Equals": [
        {
          "Ref": "Environment"
        },
        "prod"
      ]
    }
  }
}